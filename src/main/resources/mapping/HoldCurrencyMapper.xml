<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nov.virtual.sql.mapper.HoldCurrencyMapper">
  <resultMap id="BaseResultMap" type="com.nov.virtual.sql.model.HoldCurrency">
    <id column="holdCurrencyId" jdbcType="BIGINT" property="holdcurrencyid" />
    <result column="holdCurrency_CurrencyId" jdbcType="INTEGER" property="holdcurrencyCurrencyid" />
    <result column="holdCurrencyNum" jdbcType="VARCHAR" property="holdcurrencynum" />
    <result column="holdCurrency_UserId" jdbcType="BIGINT" property="holdcurrencyUserid" />
    <result column="holdCurrencyMoney" jdbcType="VARCHAR" property="holdcurrencymoney" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    holdCurrencyId, holdCurrency_CurrencyId, holdCurrencyNum, holdCurrency_UserId, holdCurrencyMoney
  </sql>
  <select id="selectByExample" parameterType="com.nov.virtual.sql.model.HoldCurrencyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `holdCurrency`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.nov.virtual.sql.model.HoldCurrencyKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from `holdCurrency`
    where holdCurrencyId = #{holdcurrencyid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.nov.virtual.sql.model.HoldCurrencyKey">
    delete from `holdCurrency`
    where holdCurrencyId = #{holdcurrencyid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.nov.virtual.sql.model.HoldCurrencyExample">
    delete from `holdCurrency`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nov.virtual.sql.model.HoldCurrency">
    insert into `holdCurrency` (holdCurrencyId, holdCurrency_CurrencyId, 
      holdCurrencyNum, holdCurrency_UserId, holdCurrencyMoney
      )
    values (#{holdcurrencyid,jdbcType=BIGINT}, #{holdcurrencyCurrencyid,jdbcType=INTEGER}, 
      #{holdcurrencynum,jdbcType=VARCHAR}, #{holdcurrencyUserid,jdbcType=BIGINT}, #{holdcurrencymoney,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.nov.virtual.sql.model.HoldCurrency">
    insert into `holdCurrency`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="holdcurrencyid != null">
        holdCurrencyId,
      </if>
      <if test="holdcurrencyCurrencyid != null">
        holdCurrency_CurrencyId,
      </if>
      <if test="holdcurrencynum != null">
        holdCurrencyNum,
      </if>
      <if test="holdcurrencyUserid != null">
        holdCurrency_UserId,
      </if>
      <if test="holdcurrencymoney != null">
        holdCurrencyMoney,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="holdcurrencyid != null">
        #{holdcurrencyid,jdbcType=BIGINT},
      </if>
      <if test="holdcurrencyCurrencyid != null">
        #{holdcurrencyCurrencyid,jdbcType=INTEGER},
      </if>
      <if test="holdcurrencynum != null">
        #{holdcurrencynum,jdbcType=VARCHAR},
      </if>
      <if test="holdcurrencyUserid != null">
        #{holdcurrencyUserid,jdbcType=BIGINT},
      </if>
      <if test="holdcurrencymoney != null">
        #{holdcurrencymoney,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nov.virtual.sql.model.HoldCurrencyExample" resultType="java.lang.Long">
    select count(*) from `holdCurrency`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update `holdCurrency`
    <set>
      <if test="record.holdcurrencyid != null">
        holdCurrencyId = #{record.holdcurrencyid,jdbcType=BIGINT},
      </if>
      <if test="record.holdcurrencyCurrencyid != null">
        holdCurrency_CurrencyId = #{record.holdcurrencyCurrencyid,jdbcType=INTEGER},
      </if>
      <if test="record.holdcurrencynum != null">
        holdCurrencyNum = #{record.holdcurrencynum,jdbcType=VARCHAR},
      </if>
      <if test="record.holdcurrencyUserid != null">
        holdCurrency_UserId = #{record.holdcurrencyUserid,jdbcType=BIGINT},
      </if>
      <if test="record.holdcurrencymoney != null">
        holdCurrencyMoney = #{record.holdcurrencymoney,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update `holdCurrency`
    set holdCurrencyId = #{record.holdcurrencyid,jdbcType=BIGINT},
      holdCurrency_CurrencyId = #{record.holdcurrencyCurrencyid,jdbcType=INTEGER},
      holdCurrencyNum = #{record.holdcurrencynum,jdbcType=VARCHAR},
      holdCurrency_UserId = #{record.holdcurrencyUserid,jdbcType=BIGINT},
      holdCurrencyMoney = #{record.holdcurrencymoney,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.nov.virtual.sql.model.HoldCurrency">
    update `holdCurrency`
    <set>
      <if test="holdcurrencyCurrencyid != null">
        holdCurrency_CurrencyId = #{holdcurrencyCurrencyid,jdbcType=INTEGER},
      </if>
      <if test="holdcurrencynum != null">
        holdCurrencyNum = #{holdcurrencynum,jdbcType=VARCHAR},
      </if>
      <if test="holdcurrencyUserid != null">
        holdCurrency_UserId = #{holdcurrencyUserid,jdbcType=BIGINT},
      </if>
      <if test="holdcurrencymoney != null">
        holdCurrencyMoney = #{holdcurrencymoney,jdbcType=VARCHAR},
      </if>
    </set>
    where holdCurrencyId = #{holdcurrencyid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nov.virtual.sql.model.HoldCurrency">
    update `holdCurrency`
    set holdCurrency_CurrencyId = #{holdcurrencyCurrencyid,jdbcType=INTEGER},
      holdCurrencyNum = #{holdcurrencynum,jdbcType=VARCHAR},
      holdCurrency_UserId = #{holdcurrencyUserid,jdbcType=BIGINT},
      holdCurrencyMoney = #{holdcurrencymoney,jdbcType=VARCHAR}
    where holdCurrencyId = #{holdcurrencyid,jdbcType=BIGINT}
  </update>
</mapper>