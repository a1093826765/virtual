<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nov.virtual.sql.mapper.CurrencyMapper">
  <resultMap id="BaseResultMap" type="com.nov.virtual.sql.model.Currency">
    <id column="currencyId" jdbcType="INTEGER" property="currencyid" />
    <result column="currencyName" jdbcType="VARCHAR" property="currencyname" />
    <result column="currency_CurrencyStatusId" jdbcType="INTEGER" property="currencyCurrencystatusid" />
    <result column="currency_Img" jdbcType="VARCHAR" property="currencyImg" />
    <result column="currency_ChineName" jdbcType="VARCHAR" property="currencyChinename" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    currencyId, currencyName, currency_CurrencyStatusId, currency_Img, currency_ChineName
  </sql>
  <select id="selectByExample" parameterType="com.nov.virtual.sql.model.CurrencyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `currency`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.nov.virtual.sql.model.CurrencyKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from `currency`
    where currencyId = #{currencyid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.nov.virtual.sql.model.CurrencyKey">
    delete from `currency`
    where currencyId = #{currencyid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.nov.virtual.sql.model.CurrencyExample">
    delete from `currency`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.nov.virtual.sql.model.Currency">
    insert into `currency` (currencyId, currencyName, currency_CurrencyStatusId, 
      currency_Img, currency_ChineName)
    values (#{currencyid,jdbcType=INTEGER}, #{currencyname,jdbcType=VARCHAR}, #{currencyCurrencystatusid,jdbcType=INTEGER}, 
      #{currencyImg,jdbcType=VARCHAR}, #{currencyChinename,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.nov.virtual.sql.model.Currency">
    insert into `currency`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="currencyid != null">
        currencyId,
      </if>
      <if test="currencyname != null">
        currencyName,
      </if>
      <if test="currencyCurrencystatusid != null">
        currency_CurrencyStatusId,
      </if>
      <if test="currencyImg != null">
        currency_Img,
      </if>
      <if test="currencyChinename != null">
        currency_ChineName,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="currencyid != null">
        #{currencyid,jdbcType=INTEGER},
      </if>
      <if test="currencyname != null">
        #{currencyname,jdbcType=VARCHAR},
      </if>
      <if test="currencyCurrencystatusid != null">
        #{currencyCurrencystatusid,jdbcType=INTEGER},
      </if>
      <if test="currencyImg != null">
        #{currencyImg,jdbcType=VARCHAR},
      </if>
      <if test="currencyChinename != null">
        #{currencyChinename,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.nov.virtual.sql.model.CurrencyExample" resultType="java.lang.Long">
    select count(*) from `currency`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update `currency`
    <set>
      <if test="record.currencyid != null">
        currencyId = #{record.currencyid,jdbcType=INTEGER},
      </if>
      <if test="record.currencyname != null">
        currencyName = #{record.currencyname,jdbcType=VARCHAR},
      </if>
      <if test="record.currencyCurrencystatusid != null">
        currency_CurrencyStatusId = #{record.currencyCurrencystatusid,jdbcType=INTEGER},
      </if>
      <if test="record.currencyImg != null">
        currency_Img = #{record.currencyImg,jdbcType=VARCHAR},
      </if>
      <if test="record.currencyChinename != null">
        currency_ChineName = #{record.currencyChinename,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update `currency`
    set currencyId = #{record.currencyid,jdbcType=INTEGER},
      currencyName = #{record.currencyname,jdbcType=VARCHAR},
      currency_CurrencyStatusId = #{record.currencyCurrencystatusid,jdbcType=INTEGER},
      currency_Img = #{record.currencyImg,jdbcType=VARCHAR},
      currency_ChineName = #{record.currencyChinename,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.nov.virtual.sql.model.Currency">
    update `currency`
    <set>
      <if test="currencyname != null">
        currencyName = #{currencyname,jdbcType=VARCHAR},
      </if>
      <if test="currencyCurrencystatusid != null">
        currency_CurrencyStatusId = #{currencyCurrencystatusid,jdbcType=INTEGER},
      </if>
      <if test="currencyImg != null">
        currency_Img = #{currencyImg,jdbcType=VARCHAR},
      </if>
      <if test="currencyChinename != null">
        currency_ChineName = #{currencyChinename,jdbcType=VARCHAR},
      </if>
    </set>
    where currencyId = #{currencyid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nov.virtual.sql.model.Currency">
    update `currency`
    set currencyName = #{currencyname,jdbcType=VARCHAR},
      currency_CurrencyStatusId = #{currencyCurrencystatusid,jdbcType=INTEGER},
      currency_Img = #{currencyImg,jdbcType=VARCHAR},
      currency_ChineName = #{currencyChinename,jdbcType=VARCHAR}
    where currencyId = #{currencyid,jdbcType=INTEGER}
  </update>
</mapper>